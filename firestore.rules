
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own profile during signup
      allow create: if request.auth != null;
      
      // A user can read their own profile, or an admin can read any profile
      allow get: if request.auth.uid == userId || isAdmin(request.auth.uid);
      
      // An admin can list all users for the admin panel
      allow list: if isAdmin(request.auth.uid);
      
      // A user can update their own profile, or an admin can update any profile (e.g., to change a role)
      allow update: if request.auth.uid == userId || isAdmin(request.auth.uid);
      
      // Only an admin can delete a user document
      allow delete: if isAdmin(request.auth.uid);
    }
    
    // Rules for all subcollections of a user (notes, classes, plans, etc.)
    match /users/{userId}/{document=**} {
      // A user can only read and write to their own subcollections
      allow read, write: if request.auth.uid == userId;
    }
    
    // Rules for the 'forum' collection (posts)
    match /forum/{postId} {
        // Any authenticated user can read all posts
        allow read: if request.auth != null;
        // A user can create a new post
        allow create: if request.auth != null;
        // Only the author of the post or an admin can update or delete it
        allow update, delete: if request.auth.uid == resource.data.author.uid || isAdmin(request.auth.uid);
    }
    
    // Rules for 'replies' subcollection in forum
    match /forum/{postId}/replies/{replyId} {
        // Any authenticated user can read replies
        allow read: if request.auth != null;
        // Any authenticated user can create a new reply
        allow create: if request.auth != null;
        // Only the author of the reply or an admin can update or delete it
        allow update, delete: if request.auth.uid == resource.data.author.uid || isAdmin(request.auth.uid);
    }
    
    // Rules for 'comments' subcollection in replies
    match /forum/{postId}/replies/{replyId}/comments/{commentId} {
        // Any authenticated user can read comments
        allow read: if request.auth != null;
        // Any authenticated user can create a new comment
        allow create: if request.auth != null;
        // Only the author of the comment or an admin can update or delete it
        allow update, delete: if request.auth.uid == resource.data.author.uid || isAdmin(request.auth.uid);
    }
    
    // Rules for the 'notifications' collection
    match /notifications/{notificationId} {
      // Any authenticated user can read notifications
      allow read: if request.auth != null;
      // Only an admin can create, update, or delete notifications
      allow write: if isAdmin(request.auth.uid);
    }
  }
}

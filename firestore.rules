
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin by their custom claim
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Users collection
    match /users/{userId} {
      // Any authenticated user can create their own profile
      allow create: if request.auth != null;
      
      // A user can read their own profile, or an admin can read any profile
      allow get: if request.auth.uid == userId || isAdmin();
      
      // An admin can list all users
      allow list: if isAdmin();
      
      // A user can update their own profile, or an admin can update any profile
      allow update: if request.auth.uid == userId || isAdmin();
      
      // Only an admin can delete a user document (deletion from Auth is handled by a Cloud Function)
      allow delete: if isAdmin();
      
      // Rules for all subcollections under a user
      match /{allPaths=**} {
        // Only the user themselves or an admin can read/write to their subcollections
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }
    
    // Forum collection
    match /forum/{postId} {
      // Any authenticated user can read posts
      allow get, list: if request.auth != null;
      // Any authenticated user can create a post
      allow create: if request.auth != null;
      // Only the post author or an admin can update/delete a post
      allow update, delete: if request.auth.uid == resource.data.author.uid || isAdmin();
      
      // Replies subcollection
      match /replies/{replyId} {
        // Any authenticated user can read and create replies
        allow get, list, create: if request.auth != null;
        // Only the reply author or an admin can update/delete a reply
        allow update, delete: if request.auth.uid == resource.data.author.uid || isAdmin();
        
        // Comments subcollection
        match /comments/{commentId} {
            // Any authenticated user can read and create comments
           allow get, list, create: if request.auth != null;
           // Only the comment author or an admin can update/delete a comment
           allow update, delete: if request.auth.uid == resource.data.author.uid || isAdmin();
        }
      }
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
        // Any authenticated user can read notifications
        allow get, list: if request.auth != null;
        // Only admins can create, update, or delete notifications
        allow write: if isAdmin();
    }
  }
}

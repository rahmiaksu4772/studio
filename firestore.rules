rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is an admin by looking at their custom claims
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Users can only read/write their own data, but admins can read/write any user's data
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null;
      allow delete: if isAdmin(); // Only admins can delete user documents
    }

    // Users can only manage their own subcollections
    match /users/{userId}/{collection}/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Forum posts can be read by any authenticated user
    match /forum/{postId} {
      allow read: if request.auth != null;
      // Users can only create posts for themselves. Admins can delete any post.
      allow create: if request.auth != null && request.resource.data.author.uid == request.auth.uid;
      allow delete: if isAdmin();
      
      // Replies can be read by any authenticated user
      match /replies/{replyId} {
        allow read: if request.auth != null;
        // Users can only create replies for themselves. Admins or the author can delete.
        allow create: if request.auth != null && request.resource.data.author.uid == request.auth.uid;
        allow update: if request.auth != null; // For upvoting
        allow delete: if request.auth != null && (isAdmin() || resource.data.author.uid == request.auth.uid);
        
        // Comments can be read by any authenticated user
        match /comments/{commentId} {
            allow read: if request.auth != null;
            // Users can only create comments for themselves. Admins or the author can delete.
            allow create: if request.auth != null && request.resource.data.author.uid == request.auth.uid;
            allow delete: if request.auth != null && (isAdmin() || resource.data.author.uid == request.auth.uid);
        }
      }
    }
    
    // Notifications can be read by any authenticated user, but only created/deleted by an admin.
    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      allow create, delete: if isAdmin();
    }
  }
}

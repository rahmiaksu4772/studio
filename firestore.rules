rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Admins can read the full list of users for the admin panel.
    // Regular users can only read their own profile document.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || request.auth.token.admin == true;
      allow create: if request.auth.uid == userId;
      // Only admins can update other users' roles.
      // A user can update their own profile information.
      allow update: if request.auth.uid == userId || request.auth.token.admin == true;
      // Only admins can delete users.
      allow delete: if request.auth.token.admin == true;
    }
    
    // Notifications can be read by anyone authenticated.
    // Only admins can create or delete notifications.
    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.admin == true;
    }

    // A user can only access their own subcollections (classes, notes, plans, schedules).
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth.uid == userId;
    }
    
    // Forum posts can be read by any authenticated user.
    // Users can create posts. They can only update/delete their own posts. Admins can delete any post.
    match /forum/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.author.uid;
      allow update: if request.auth.uid == resource.data.author.uid;
      allow delete: if request.auth.uid == resource.data.author.uid || request.auth.token.admin == true;
      
      // Rules for replies and comments subcollections
      match /replies/{replyId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.author.uid;
        allow update: if request.auth.uid == resource.data.author.uid || request.auth.token.admin == true;
        allow delete: if request.auth.uid == resource.data.author.uid || request.auth.token.admin == true;
        
        match /comments/{commentId} {
          allow read: if request.auth != null;
          allow create: if request.auth.uid == request.resource.data.author.uid;
          allow delete: if request.auth.uid == resource.data.author.uid || request.auth.token.admin == true;
          allow update: if false; // Comments are not editable
        }
      }
    }
  }
}
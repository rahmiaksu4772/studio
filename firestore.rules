
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Users can read their own profile, admins can read any.
    // Users can update their own profile.
    match /users/{userId} {
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow write: if isSignedIn() && isOwner(userId);

      // Users can manage their own subcollections (classes, notes, etc.)
      match /{subcollection}/{docId=**} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
    }
    
    // Forum posts can be read by any signed-in user.
    // Posts can be created by any signed-in user.
    // Posts can only be deleted by the author or an admin.
    match /forum/{postId} {
      allow read, create: if isSignedIn();
      allow update, delete: if isSignedIn() && (resource.data.author.uid == request.auth.uid || isAdmin());
      
      // Replies and comments follow similar logic
      match /replies/{replyId} {
        allow read, create: if isSignedIn();
        allow update, delete: if isSignedIn() && (resource.data.author.uid == request.auth.uid || isAdmin());
        
        match /comments/{commentId} {
            allow read, create: if isSignedIn();
            allow update, delete: if isSignedIn() && (resource.data.author.uid == request.auth.uid || isAdmin());
        }
      }
    }
    
    // Notifications can be read by any signed-in user.
    // Only admins can create or delete notifications.
    match /notifications/{notificationId} {
      allow read: if isSignedIn();
      allow create, delete: if isSignedIn() && isAdmin();
    }
  }
}

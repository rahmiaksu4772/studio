
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Check for the admin custom claim on the user's token
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    match /users/{userId} {
      // Admins can read/list all users. Users can only read their own profile.
      allow read, list: if isAdmin() || isOwner(userId);
      // Users can create their own profile.
      allow create: if request.auth.uid != null;
      // Admins can update any user. Users can only update their own profile.
      allow update: if isAdmin() || isOwner(userId);
      // Only admins can delete users.
      allow delete: if isAdmin();

      // Any authenticated user can access their own subcollections.
      match /{subcollection}/{docId} {
        allow read, write, create, delete: if isOwner(userId);
      }
    }
    
    match /forum/{postId} {
      allow read: if request.auth != null;
      allow create: if isOwner(request.resource.data.author.uid);
      allow update, delete: if isOwner(resource.data.author.uid) || isAdmin();

      match /replies/{replyId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid != null;
        allow update, delete: if isOwner(resource.data.author.uid) || isAdmin();

        match /comments/{commentId} {
          allow read: if request.auth != null;
          allow create: if request.auth.uid != null;
          allow update, delete: if isOwner(resource.data.author.uid) || isAdmin();
        }
      }
    }

    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      // Only admins can create, update, or delete notifications.
      allow create, update, delete: if isAdmin();
    }
  }
}

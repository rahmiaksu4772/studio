
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role via custom claim
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Users can read their own profile. Admins can read all profiles.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      // Only admins can update user roles. Users can update their own profiles.
      allow write: if request.auth.uid == userId || isAdmin();
    }
    
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth.uid == userId;
    }
    
    // Notifications can be read by any authenticated user.
    // Notifications can only be created or deleted by an admin.
    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Forum posts can be read by anyone authenticated.
    // They can be created, updated, or deleted by their author or an admin.
    match /forum/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if resource.data.author.uid == request.auth.uid || isAdmin();
      
      // Rules for replies and comments subcollections
      match /{subcollection}/{docId} {
         allow read: if request.auth != null;
         allow create: if request.auth != null;
         allow update, delete: if resource.data.author.uid == request.auth.uid || isAdmin();
      }
    }
  }
}


rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Users collection rules
    match /users/{userId} {
      // READ: 
      // - An admin can read the full list of users.
      // - Any authenticated user can read a specific user's profile (needed for the update rule to work).
      allow list: if isAdmin(request.auth.uid);
      allow get: if request.auth != null;

      // CREATE: Any authenticated user can create their own profile document.
      allow create: if request.auth.uid == userId;
      
      // UPDATE: 
      // - A user can update their own profile.
      // - An admin can update any user's profile.
      allow update: if request.auth.uid == userId || isAdmin(request.auth.uid);
      
      // DELETE: Only an admin can delete a user document.
      allow delete: if isAdmin(request.auth.uid);

      // Rules for all subcollections of a user (classes, notes, plans, etc.)
      match /{subcollection}/{docId=**} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Forum rules
    match /forum/{postId} {
      // READ: Any authenticated user can read forum posts.
      allow get;
      allow list;
      
      // WRITE: 
      // - Any authenticated user can create a post.
      // - Only the author or an admin can update/delete a post.
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.author.uid || isAdmin(request.auth.uid);
      
      match /replies/{replyId} {
        allow read;
        allow create: if request.auth != null;
        allow update, delete: if request.auth.uid == resource.data.author.uid || isAdmin(request.auth.uid);

        match /comments/{commentId} {
            allow read;
            allow create: if request.auth != null;
            allow update, delete: if request.auth.uid == resource.data.author.uid || isAdmin(request.auth.uid);
        }
      }
    }

    // Notifications rules
    match /notifications/{notificationId} {
        // READ: Any authenticated user can read notifications.
        allow get;
        allow list;
        // WRITE: Only an admin can create, update, or delete notifications.
        allow write: if isAdmin(request.auth.uid);
    }
  }
}

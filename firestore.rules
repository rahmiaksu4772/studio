
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users Collection
    match /users/{userId} {
      // READ: 
      // 1. Admins can list all users.
      // 2. Any authenticated user can read their own profile.
      allow list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow get: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // CREATE:
      // Any authenticated user can create their own user document.
      allow create: if request.auth.uid == userId;

      // UPDATE:
      // 1. A user can update their own document.
      // 2. An admin can update any user's document.
      allow update: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // DELETE:
      // Only an admin can delete a user document.
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // Subcollections (classes, notes, plans, etc.)
      match /{subcollection}/{docId=**} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Forum Collection
    match /forum/{postId} {
      // READ: Any authenticated user can read forum posts.
      allow get: if request.auth != null;
      allow list: if request.auth != null;

      // WRITE: Only authenticated users can create posts.
      allow create: if request.auth != null;
      
      // UPDATE, DELETE: Only the post author or an admin can update/delete.
      allow update, delete: if request.auth.uid == resource.data.author.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Replies Subcollection
      match /replies/{replyId} {
        allow create: if request.auth != null;
        allow update, delete: if request.auth.uid == resource.data.author.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        
        // Comments Sub-subcollection
        match /comments/{commentId} {
            allow create: if request.auth != null;
            allow delete: if request.auth.uid == resource.data.author.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        }
      }
    }
    
    // Notifications Collection
    match /notifications/{notificationId} {
      // READ: Any authenticated user can read notifications.
      allow get, list: if request.auth != null;
      
      // WRITE: Only admins can create/update/delete notifications.
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
